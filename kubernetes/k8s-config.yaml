# complete-k8s-config.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: petshop

---
# Nginx ConfigMap for load balancing
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: petshop
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      upstream api_gateway {
        least_conn;
        server api-gateway:7000;
      }
      upstream product_service {
        least_conn;
        server product-service:7002;
      }
      upstream user_service {
        least_conn;
        server user-service:7001;
      }
      upstream cart_service {
        least_conn;
        server cart-service:7003;
      }
      upstream category_service {
        least_conn;
        server category-service:7004;
      }
      upstream order_service {
        least_conn;
        server order-service:7005;
      }
      upstream search_service {
        least_conn;
        server search-service:7006;
      }

      server {
        listen 80;
        location /api/users {
          proxy_pass http://user_service;
        }
        location /api/products {
          proxy_pass http://product_service;
        }
        location /api/cart {
          proxy_pass http://cart_service;
        }
        location /api/categories {
          proxy_pass http://category_service;
        }
        location /api/orders {
          proxy_pass http://order_service;
        }
        location /api/search {
          proxy_pass http://search_service;
        }
        location / {
          proxy_pass http://api_gateway;
        }
      }
    }

---
# Nginx Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-lb
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-lb
  template:
    metadata:
      labels:
        app: nginx-lb
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
          requests:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config

---
# Nginx Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-lb
  namespace: petshop
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx-lb

---
# ConfigMap for service URLs
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: petshop
data:
  RABBITMQ_URL: "amqp://rabbitmq:5672"
  PRODUCT_SERVICE_URL: "http://product-service:7002"
  USER_SERVICE_URL: "http://user-service:7001"
  CART_SERVICE_URL: "http://cart-service:7003"
  CATEGORY_SERVICE_URL: "http://category-service:7004"

---
# Secret for JWT
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: petshop
type: Opaque
data:
  jwt-secret: eW91cl9qd3Rfc2VjcmV0

---
# MongoDB PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-data
  namespace: petshop
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: petshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "250m"
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-data

---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: petshop
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017

---
# RabbitMQ Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: petshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          resources:
            limits:
              memory: "512Mi"
              cpu: "300m"
            requests:
              memory: "256Mi"
              cpu: "150m"
          readinessProbe:
            tcpSocket:
              port: 5672
            initialDelaySeconds: 10
            periodSeconds: 30
          livenessProbe:
            tcpSocket:
              port: 5672
            initialDelaySeconds: 30
            periodSeconds: 30

---
# RabbitMQ Service
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: petshop
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: de1api-api-gateway:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 7000
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: petshop
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
  ports:
    - port: 7000
      targetPort: 7000

---
# User Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: de1api-user-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 7001
          env:
            - name: MONGO_URL
              value: "mongodb://mongodb:27017/users"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: PORT
              value: "7001"
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# User Service Service
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: petshop
spec:
  type: LoadBalancer
  selector:
    app: user-service
  ports:
    - port: 7001
      targetPort: 7001

---
# Product Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product-service
          image: de1api-product-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 7002
          env:
            - name: MONGO_URL
              value: "mongodb://mongodb:27017/products"
            - name: RABBITMQ_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: PORT
              value: "7002"
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# Product Service Service
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: petshop
spec:
  type: LoadBalancer
  selector:
    app: product-service
  ports:
    - port: 7002
      targetPort: 7002

---
# Cart Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-service
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cart-service
  template:
    metadata:
      labels:
        app: cart-service
    spec:
      containers:
        - name: cart-service
          image: de1api-cart-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 7003
          env:
            - name: MONGO_URL
              value: "mongodb://mongodb:27017/carts"
            - name: RABBITMQ_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: PORT
              value: "7003"
            - name: PRODUCT_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: PRODUCT_SERVICE_URL
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# Cart Service Service
apiVersion: v1
kind: Service
metadata:
  name: cart-service
  namespace: petshop
spec:
  type: LoadBalancer
  selector:
    app: cart-service
  ports:
    - port: 7003
      targetPort: 7003

---
# Category Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: category-service
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: category-service
  template:
    metadata:
      labels:
        app: category-service
    spec:
      containers:
        - name: category-service
          image: de1api-category-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 7004
          env:
            - name: MONGO_URL
              value: "mongodb://mongodb:27017/categories"
            - name: RABBITMQ_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: PORT
              value: "7004"
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# Category Service Service
apiVersion: v1
kind: Service
metadata:
  name: category-service
  namespace: petshop
spec:
  type: LoadBalancer
  selector:
    app: category-service
  ports:
    - port: 7004
      targetPort: 7004

---
# Order Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: de1api-order-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 7005
          env:
            - name: MONGO_URL
              value: "mongodb://mongodb:27017/orders"
            - name: RABBITMQ_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: PORT
              value: "7005"
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# Order Service Service
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: petshop
spec:
  type: LoadBalancer
  selector:
    app: order-service
  ports:
    - port: 7005
      targetPort: 7005

---
# Search Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-service
  namespace: petshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: search-service
  template:
    metadata:
      labels:
        app: search-service
    spec:
      containers:
        - name: search-service
          image: de1api-search-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 7006
          env:
            - name: RABBITMQ_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: PORT
              value: "7006"
            - name: PRODUCT_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: PRODUCT_SERVICE_URL
            - name: CATEGORY_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: CATEGORY_SERVICE_URL
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

---
# Search Service Service
apiVersion: v1
kind: Service
metadata:
  name: search-service
  namespace: petshop
spec:
  type: LoadBalancer
  selector:
    app: search-service
  ports:
    - port: 7006
      targetPort: 7006